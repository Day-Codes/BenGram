{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  DMChannel,\n  Message,\n  MessageButton,\n  MessageEmbed,\n  TextChannel,\n  MessageAttachment,\n  UserResolvable,\n} from \"discord.js\";\nimport { ButtonOption } from \"./types/ButtonOption\";\n\nconst availableEmojis = [\"⏮️\", \"◀️\", \"⏹️\", \"▶️\", \"⏭️\"];\n\nclass Pagination {\n  private message?: Message;\n  private readonly channel: TextChannel | DMChannel;\n  private readonly pages: MessageEmbed[];\n  private index = 0;\n\n  /**\n   *\n   * @param {TextChannel | DMChannel} channel - The target channel\n   * @param {MessageEmbed[]} pages - Embed pages\n   * @param {MessageAttachment[]} files - Optional files to attach\n   * @param {string} [footerText] - Optional footer text, will show `Text 1 of 5` if you pass `Text`, for example\n   * @param {number} timeout - How long button need to be active\n   * @param {ButtonOption[]} options - optional options for the buttons\n   * @param {UserResolvable} Author - To limit the pagination to a specific author\n   * @param files {MessageAttachment[]} - Optional files to attach\n   */\n  constructor(\n    channel: TextChannel | DMChannel,\n    pages: MessageEmbed[],\n    private readonly footerText = \"Page\",\n    private readonly timeout?: number,\n    private readonly options?: ButtonOption[],\n    private readonly Author?: UserResolvable,\n    private readonly files?: MessageAttachment[]\n  ) {\n    if (options && options.length > 5) {\n      throw new TypeError(\"You have passed more than 5 buttons as options\");\n    } else if (options && options.length < 4) {\n      throw new TypeError(\"You have passed less than 5 buttons as options\");\n    }\n    this.channel = channel;\n    if (files) {\n      this.files = files;\n    }\n\n    this.pages = pages.map((page, pageIndex) => {\n      if (page.footer && (page.footer.text || page.footer.iconURL)) return page;\n      return page.setFooter({\n        text: `${footerText} ${pageIndex + 1} of ${pages.length}`,\n      });\n    });\n  }\n\n  /**\n   * Starts the pagination\n   */\n  async paginate(): Promise<void> {\n    this.message = await this.channel.send({\n      embeds: [this.pages[this.index]],\n      ...(this.files && { files: [this.files[this.index]] }),\n      components: [\n        {\n          type: 1,\n          components: this.options\n            ? this.options.map((x, i) => {\n                return new MessageButton({\n                  emoji: x.emoji,\n                  style: x.style,\n                  type: 2,\n                  label: x.label,\n                  customId: availableEmojis[i],\n                });\n              })\n            : [\n                {\n                  type: 2,\n                  style: \"PRIMARY\",\n                  label: \"First\",\n                  emoji: \"⏮️\",\n                  customId: \"⏮️\",\n                },\n                {\n                  type: 2,\n\n                  style: \"PRIMARY\",\n                  label: \"Prev\",\n                  emoji: \"◀️\",\n                  customId: \"◀️\",\n                },\n                {\n                  type: 2,\n                  style: \"DANGER\",\n                  label: \"Stop\",\n                  emoji: \"⏹️\",\n                  customId: \"⏹️\",\n                },\n                {\n                  type: 2,\n                  style: \"PRIMARY\",\n                  label: \"Next\",\n                  emoji: \"▶️\",\n                  customId: \"▶️\",\n                },\n                {\n                  type: 2,\n                  style: \"PRIMARY\",\n                  label: \"Last\",\n                  emoji: \"⏭️\",\n                  customId: \"⏭️\",\n                },\n              ],\n        },\n      ],\n    });\n    if (this.pages.length < 2) {\n      return;\n    }\n    const author = this.Author\n      ? this.channel.client.users.resolve(this.Author)\n      : undefined;\n    const interactionCollector = this.message?.createMessageComponentCollector({\n      max: this.pages.length * 5,\n      filter: (x) => {\n        return !(author && x.user.id !== author.id);\n      },\n    });\n    setTimeout(\n      async () => {\n        interactionCollector?.stop(\"Timeout\");\n        await this?.message?.edit({\n          components: [],\n        });\n      },\n      this.timeout ? this.timeout : 60000\n    );\n    interactionCollector.on(\"collect\", async (interaction) => {\n      const { customId } = interaction;\n      let newIndex =\n        customId === availableEmojis[0]\n          ? 0 // Start\n          : customId === availableEmojis[1]\n          ? this.index - 1 // Prev\n          : customId === availableEmojis[2]\n          ? NaN // Stop\n          : customId === availableEmojis[3]\n          ? this.index + 1 // Next\n          : customId === availableEmojis[4]\n          ? this.pages.length - 1 // End\n          : this.index;\n      if (isNaN(newIndex)) {\n        // Stop\n        interactionCollector.stop(\"stopped by user\");\n        await interaction.update({\n          components: [],\n        });\n      } else {\n        if (newIndex < 0) newIndex = 0;\n        if (newIndex >= this.pages.length) newIndex = this.pages.length - 1;\n        this.index = newIndex;\n        await interaction.update({\n          embeds: [this.pages[this.index]],\n          ...(this.files && { files: [this.files[this.index]] }),\n        });\n      }\n    });\n    interactionCollector.on(\"end\", async () => {\n      await this?.message?.edit({\n        components: [],\n      });\n    });\n  }\n}\n\nexport { ButtonOption, Pagination };\n"]}